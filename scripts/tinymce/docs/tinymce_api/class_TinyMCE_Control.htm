<html xmlns:moxie="urn:moxie"><head><META http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>Class: TinyMCE_Control</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link href="api_docs.css" rel="stylesheet" type="text/css"><script type="text/javascript" src="search.js"></script></head><body><h1 class="title">TinyMCE</h1><div id="navigation"><a href="index.htm" class="indexlink">TinyMCE</a><div id="classlist"><h4>Classes</h4><ul><li><a href="class_TinyMCE_Cleanup.htm">TinyMCE_Cleanup</a></li><li><a href="class_TinyMCE_Control.htm">TinyMCE_Control</a></li><li><a href="class_TinyMCE_Engine.htm">TinyMCE_Engine</a></li><li><a href="class_TinyMCE_Layer.htm">TinyMCE_Layer</a></li><li><a href="class_TinyMCE_Menu.htm">TinyMCE_Menu</a></li><li><a href="class_TinyMCE_Popup.htm">TinyMCE_Popup</a></li><li><a href="class_TinyMCE_Selection.htm">TinyMCE_Selection</a></li><li><a href="class_TinyMCE_UndoRedo.htm">TinyMCE_UndoRedo</a></li></ul></div><div class="search"><form action="javascript:void(0);" onsubmit="return Search.exec(this.query.value,'searchresult','maincontent');"><label id="querylabel" for="query">Search:</label><input type="text" id="query" name="query" value=""></form></div></div><div id="searchresult"></div><div id="maincontent"><div id="classview"><div class="inheritagelist">Object<br><div class="baseclass"><strong>TinyMCE_Control</strong><br></div></div><h3>Class TinyMCE_Control</h3><div class="section"><div class="longsummary"></div></div><div class="section"><table class="fieldsummary"><caption>Field Summary</caption><tr><td class="datatype"><a href="class_TinyMCE_Cleanup.htm">TinyMCE_Cleanup</a></td><td><a href="#cleanup">cleanup</a><div class="shortsummary">Cleanup engine reference, handles all XHTML serialization and cleanup.</div></td></tr><tr><td class="datatype"><a href="class_TinyMCE_Selection.htm">TinyMCE_Selection</a></td><td><a href="#selection">selection</a><div class="shortsummary">Contains methods for handling the current instance selection.</div></td></tr><tr><td class="datatype">Array</td><td><a href="#settings">settings</a><div class="shortsummary">Name/Value array containing all instance settings.</div></td></tr></table></div><div class="section"><table class="constructorsummary"><caption>Constructor Summary</caption><tr><td><a href="#TinyMCE_Control">TinyMCE_Control</a>(&lt;Array&gt;	settings)
		<div class="shortsummary">This is the TinyMCE editor control instance class.</div></td></tr></table></div><div class="section"><table class="methodsummary"><caption>Method	Summary</caption><tr><td class="datatype">void</td><td><a href="#addPlugin">addPlugin</a>(&lt;string&gt;	n, &lt;TinyMCE_Plugin&gt;	n)
		<div class="shortsummary">Adds a plugin to the editor instance.</div></td></tr><tr><td class="datatype">boolean</td><td><a href="#addShortcut">addShortcut</a>(&lt;string&gt;	m, &lt;Object&gt;	k, &lt;string&gt;	d, &lt;string&gt;	cmd, &lt;boolean&gt;	ui, &lt;Object&gt;	va)
		<div class="shortsummary">Adds a keyboard shortcut to a specific command.</div></td></tr><tr><td class="datatype">void</td><td><a href="#autoResetDesignMode">autoResetDesignMode</a>()
		<div class="shortsummary">Auto resets the design mode of the document if it gets lost.</div></td></tr><tr><td class="datatype">void</td><td><a href="#execCommand">execCommand</a>(&lt;string&gt;	command, &lt;boolean&gt;	user_interface, &lt;mixed&gt;	value)
		<div class="shortsummary">Executes a command on the current instance.</div></td></tr><tr><td class="datatype">HTMLElement</td><td><a href="#getBody">getBody</a>()
		<div class="shortsummary">Returns the body element of a editor instance.</div></td></tr><tr><td class="datatype">DOMDocument</td><td><a href="#getContainerWin">getContainerWin</a>()
		<div class="shortsummary">Returns the container window of a editor instance.</div></td></tr><tr><td class="datatype">Object</td><td><a href="#getData">getData</a>(&lt;String&gt;	na)
		<div class="shortsummary">Get custom data storage object by name.</div></td></tr><tr><td class="datatype">DOMDocument</td><td><a href="#getDoc">getDoc</a>()
		<div class="shortsummary">Returns the DOM document of a editor instance.</div></td></tr><tr><td class="datatype">HTMLElement</td><td><a href="#getFocusElement">getFocusElement</a>()
		<div class="shortsummary">Returns the currently selected element.</div></td></tr><tr><td class="datatype">string</td><td><a href="#getHTML">getHTML</a>(&lt;bool&gt;	r)
		<div class="shortsummary">Returns the cleaned HTML of the editor control instance.</div></td></tr><tr><td class="datatype">HTMLElement</td><td><a href="#getParentBlockElement">getParentBlockElement</a>(&lt;HTMLNode&gt;	n)
		<div class="shortsummary">Returns the first block element parent of the specified node.</div></td></tr><tr><td class="datatype">HTMLElement</td><td><a href="#getParentElement">getParentElement</a>(&lt;HTMLNode&gt;	node, &lt;string&gt;	na, &lt;function&gt;	f)
		<div class="shortsummary">Returns the parent element of the specified node based on the search criteria.</div></td></tr><tr><td class="datatype">DOMNode</td><td><a href="#getParentNode">getParentNode</a>(&lt;DOMNode&gt;	n, &lt;function&gt;	f)
		<div class="shortsummary">Returns a node by the specified selector function.</div></td></tr><tr><td class="datatype">DOMRange</td><td><a href="#getRng">getRng</a>()
		<div class="shortsummary">Returns the browsers selections first range instance.</div></td></tr><tr><td class="datatype">DOMSelection</td><td><a href="#getSel">getSel</a>()
		<div class="shortsummary">Returns the browsers selection instance.</div></td></tr><tr><td class="datatype">Object</td><td><a href="#getViewPort">getViewPort</a>()
		<div class="shortsummary">Returns the viewport of the editor instance.</div></td></tr><tr><td class="datatype">Window</td><td><a href="#getWin">getWin</a>()
		<div class="shortsummary">Returns the window of a editor instance.</div></td></tr><tr><td class="datatype">boolean</td><td><a href="#handleShortcut">handleShortcut</a>(&lt;DOMEvent&gt;	e)
		<div class="shortsummary">Executes shortcuts based on the event information.</div></td></tr><tr><td class="datatype">boolean</td><td><a href="#hasPlugin">hasPlugin</a>(&lt;string&gt;	n)
		<div class="shortsummary">Returns true/false if the instance has the current plugin available.</div></td></tr><tr><td class="datatype">boolean</td><td><a href="#isDirty">isDirty</a>()
		<div class="shortsummary">Returns true/false if the editor instance is dirty or not.</div></td></tr><tr><td class="datatype">boolean</td><td><a href="#isHidden">isHidden</a>()
		<div class="shortsummary">Returns if the instance is hidden or not.</div></td></tr><tr><td class="datatype">boolean</td><td><a href="#queryCommandState">queryCommandState</a>(&lt;string&gt;	c)
		<div class="shortsummary">Returns a command specific state, for example if bold is enabled or not.</div></td></tr><tr><td class="datatype">mixed</td><td><a href="#queryCommandValue">queryCommandValue</a>(&lt;string&gt;	c)
		<div class="shortsummary">Returns a command specific value, for example the current font size.</div></td></tr><tr><td class="datatype">void</td><td><a href="#repaint">repaint</a>()
		<div class="shortsummary">Repaints the editarea in Gecko browsers.</div></td></tr><tr><td class="datatype">void</td><td><a href="#resizeToContent">resizeToContent</a>()
		<div class="shortsummary">Auto resizes the current editor instance to match the inner document size.</div></td></tr><tr><td class="datatype">void</td><td><a href="#select">select</a>()
		<div class="shortsummary">Selects this instance as the currently selected instance.</div></td></tr><tr><td class="datatype">void</td><td><a href="#setBaseHREF">setBaseHREF</a>(&lt;string&gt;	u)
		<div class="shortsummary">Sets the base href url of the current document instance.</div></td></tr><tr><td class="datatype">void</td><td><a href="#setHTML">setHTML</a>(&lt;string&gt;	h)
		<div class="shortsummary">Sets the HTML contents of the instance.</div></td></tr><tr><td class="datatype">void</td><td><a href="#switchSettings">switchSettings</a>()
		<div class="shortsummary">Switches the global TinyMCE settings to the current instance settings.</div></td></tr><tr><td class="datatype">void</td><td><a href="#triggerSave">triggerSave</a>(&lt;boolean&gt;	skip_cleanup, &lt;boolean&gt;	skip_callback)
		<div class="shortsummary">Moves the contents from the TinyMCE editor control instance to the hidden textarea that got replaced with TinyMCE.</div></td></tr></table></div><div class="section field details"><h3><a name="field_detail">Field Detail</a></h3><div class="content"><h4><a name="cleanup">cleanup</a></h4><div class="layout"> TinyMCE_Cleanup cleanup</div><div class="detail"><div class="longsummary">Cleanup engine reference, handles all XHTML serialization and cleanup.</div></div><hr><h4><a name="selection">selection</a></h4><div class="layout"> TinyMCE_Selection selection</div><div class="detail"><div class="longsummary">Contains methods for handling the current instance selection.</div></div><hr><h4><a name="settings">settings</a></h4><div class="layout"> Array settings</div><div class="detail"><div class="longsummary">Name/Value array containing all instance settings.</div></div></div></div><div class="section constructor details"><h3><a name="constructor_detail">Constructor Detail</a></h3><div class="content"><h4><a name="TinyMCE_Control">TinyMCE_Control</a></h4><div class="layout">TinyMCE_Control(&lt;Array&gt;	settings)
		</div><div class="detail"><div class="longsummary">This is the TinyMCE editor control instance class. A instance of this class will is made for each converted text area.</div><div class="params"><h4>Parameters</h4><div class="param">settings - Name/Value array of instance specific configuration settings.</div></div></div></div></div><div class="section method details"><h3><a name="method_detail">Method Detail</a></h3><div class="content"><h4><a name="addPlugin">addPlugin</a></h4><div class="layout">void addPlugin(&lt;string&gt;	n, &lt;TinyMCE_Plugin&gt;	n)
		</div><div class="detail"><div class="longsummary">Adds a plugin to the editor instance. This will also add it globaly.</div><div class="params"><h4>Parameters</h4><div class="param">n - Plugin name to check for.</div><div class="param">n - TinyMCE plugin instance.</div></div></div><hr><h4><a name="addShortcut">addShortcut</a></h4><div class="layout">boolean addShortcut(&lt;string&gt;	m, &lt;Object&gt;	k, &lt;string&gt;	d, &lt;string&gt;	cmd, &lt;boolean&gt;	ui, &lt;Object&gt;	va)
		</div><div class="detail"><div class="longsummary">Adds a keyboard shortcut to a specific command. These shortcuts can for example be added at the initInstance callback of a plugin. The shortcut description can be a language variable name or a string describing the function. If you don't specify a command, the shortcut will simply be a blocker shortcut. This enables you to remove built in shortcuts or remove theme specific shortcuts from a plugin.<br /> Example shortcut inst.addShortcut('ctrl,alt', 'k', 'mceSomeCommand', false, 'somevalue'); Example blocker inst.addShortcut('ctrl,alt', 'k');</div><div class="params"><h4>Parameters</h4><div class="param">m - List of shortcut modifiers keys, for example "ctrl,alt".</div><div class="param">k - Shortcut key char for example "s" or a keycode value "13".</div><div class="param">d - Optional Shortcut description, this will be presented in the about dialog.</div><div class="param">cmd - Optional Command name to execute, for example mceLink or Bold.</div><div class="param">ui - Optional True/false state if a UI (dialog) should be presented or not.</div><div class="param">va - Optional command value, this can be anything.</div></div><h4>Returns</h4><div class="longsummary return">true/false if the shortcut was added or not</div></div><hr><h4><a name="autoResetDesignMode">autoResetDesignMode</a></h4><div class="layout">void autoResetDesignMode()
		</div><div class="detail"><div class="longsummary">Auto resets the design mode of the document if it gets lost. This is a Gecko specific function since it's a workaround for a bug where Gecko browsers loose the designMode state if the editor is hidden and shown in a tab or div.</div></div><hr><h4><a name="execCommand">execCommand</a></h4><div class="layout">void execCommand(&lt;string&gt;	command, &lt;boolean&gt;	user_interface, &lt;mixed&gt;	value)
		</div><div class="detail"><div class="longsummary">Executes a command on the current instance. These commands can be TinyMCE internal commands prefixed with "mce" or they can be build in browser commands such as "Bold". A compleate list of browser commands is available on MSDN or Mozilla.org. This function will dispatch the execCommand function on each plugin, theme or the execcommand_callback option if none of these return true it will handle the command as a internal browser command.</div><div class="params"><h4>Parameters</h4><div class="param">command - Command name to execute, for example mceLink or Bold.</div><div class="param">user_interface - True/false state if a UI (dialog) should be presented or not.</div><div class="param">value - Optional command value, this can be anything.</div></div></div><hr><h4><a name="getBody">getBody</a></h4><div class="layout">HTMLElement getBody()
		</div><div class="detail"><div class="longsummary">Returns the body element of a editor instance.</div><h4>Returns</h4><div class="longsummary return">Body element of a editor instance.</div></div><hr><h4><a name="getContainerWin">getContainerWin</a></h4><div class="layout">DOMDocument getContainerWin()
		</div><div class="detail"><div class="longsummary">Returns the container window of a editor instance. The container window is the window where the current instance lives in.</div><h4>Returns</h4><div class="longsummary return">container window of a editor instance.</div></div><hr><h4><a name="getData">getData</a></h4><div class="layout">Object getData(&lt;String&gt;	na)
		</div><div class="detail"><div class="longsummary">Get custom data storage object by name. The name should be for example the theme name or plugin name. The custom data storage can be used to store plugin/theme specific information on a editor instance. A empty object will be created automaticly the first time called.</div><div class="params"><h4>Parameters</h4><div class="param">na - Name of data storate to retrive.</div></div><h4>Returns</h4><div class="longsummary return">Data storage object</div></div><hr><h4><a name="getDoc">getDoc</a></h4><div class="layout">DOMDocument getDoc()
		</div><div class="detail"><div class="longsummary">Returns the DOM document of a editor instance.</div><h4>Returns</h4><div class="longsummary return">DOM document of a editor instance.</div></div><hr><h4><a name="getFocusElement">getFocusElement</a></h4><div class="layout">HTMLElement getFocusElement()
		</div><div class="detail"><div class="longsummary">Returns the currently selected element. This is was added for compatiblity and is deprecated. Please use inst.selection.getFocusElement instead.</div><h4>Returns</h4><div class="longsummary return">Currently selected element.</div></div><hr><h4><a name="getHTML">getHTML</a></h4><div class="layout">string getHTML(&lt;bool&gt;	r)
		</div><div class="detail"><div class="longsummary">Returns the cleaned HTML of the editor control instance.</div><div class="params"><h4>Parameters</h4><div class="param">r - Optional raw parameter, if set to true. Cleanup will be skipped.</div></div><h4>Returns</h4><div class="longsummary return">Cleaned HTML content string.</div></div><hr><h4><a name="getParentBlockElement">getParentBlockElement</a></h4><div class="layout">HTMLElement getParentBlockElement(&lt;HTMLNode&gt;	n)
		</div><div class="detail"><div class="longsummary">Returns the first block element parent of the specified node. This method will not go below the point of the instance body.</div><div class="params"><h4>Parameters</h4><div class="param">n - Node get parent block element for.</div></div><h4>Returns</h4><div class="longsummary return">First block element parent of the specified node or null if it wasn't found.</div></div><hr><h4><a name="getParentElement">getParentElement</a></h4><div class="layout">HTMLElement getParentElement(&lt;HTMLNode&gt;	node, &lt;string&gt;	na, &lt;function&gt;	f)
		</div><div class="detail"><div class="longsummary">Returns the parent element of the specified node based on the search criteria. This method will not go below the point of the instance body.</div><div class="params"><h4>Parameters</h4><div class="param">node - Node to get parent element of.</div><div class="param">na - Comma separated list of element names to get.</div><div class="param">f - Optional function to call for each node, if it returns true the node is valid.</div></div><h4>Returns</h4><div class="longsummary return">HTMLElement or null based on search criteras.</div></div><hr><h4><a name="getParentNode">getParentNode</a></h4><div class="layout">DOMNode getParentNode(&lt;DOMNode&gt;	n, &lt;function&gt;	f)
		</div><div class="detail"><div class="longsummary">Returns a node by the specified selector function. This function will loop through all parent nodes and call the specified function for each node. If the function then returns true it will stop the execution and return that node. This function will not go below the instance body element.</div><div class="params"><h4>Parameters</h4><div class="param">n - HTML node to search parents on.</div><div class="param">f - Selection function to execute on each node.</div></div><h4>Returns</h4><div class="longsummary return">DOMNode or null if it wasn't found.</div></div><hr><h4><a name="getRng">getRng</a></h4><div class="layout">DOMRange getRng()
		</div><div class="detail"><div class="longsummary">Returns the browsers selections first range instance. This is was added for compatiblity and is deprecated. Please use inst.selection.getRng instead.</div><h4>Returns</h4><div class="longsummary return">Browsers selections first range instance.</div></div><hr><h4><a name="getSel">getSel</a></h4><div class="layout">DOMSelection getSel()
		</div><div class="detail"><div class="longsummary">Returns the browsers selection instance. This is was added for compatiblity and is deprecated. Please use inst.selection.getSel instead.</div><h4>Returns</h4><div class="longsummary return">Browser selection instance.</div></div><hr><h4><a name="getViewPort">getViewPort</a></h4><div class="layout">Object getViewPort()
		</div><div class="detail"><div class="longsummary">Returns the viewport of the editor instance.</div><h4>Returns</h4><div class="longsummary return">Viewport object with fields top, left, width and height.</div></div><hr><h4><a name="getWin">getWin</a></h4><div class="layout">Window getWin()
		</div><div class="detail"><div class="longsummary">Returns the window of a editor instance.</div><h4>Returns</h4><div class="longsummary return">Window of a editor instance.</div></div><hr><h4><a name="handleShortcut">handleShortcut</a></h4><div class="layout">boolean handleShortcut(&lt;DOMEvent&gt;	e)
		</div><div class="detail"><div class="longsummary">Executes shortcuts based on the event information.</div><div class="params"><h4>Parameters</h4><div class="param">e - Keyboard event to handle.</div></div><h4>Returns</h4><div class="longsummary return">true/false if the shortcut was found and executed or not.</div></div><hr><h4><a name="hasPlugin">hasPlugin</a></h4><div class="layout">boolean hasPlugin(&lt;string&gt;	n)
		</div><div class="detail"><div class="longsummary">Returns true/false if the instance has the current plugin available.</div><div class="params"><h4>Parameters</h4><div class="param">n - Plugin name to check for.</div></div><h4>Returns</h4><div class="longsummary return">true/false if the instance has the current plugin available.</div></div><hr><h4><a name="isDirty">isDirty</a></h4><div class="layout">boolean isDirty()
		</div><div class="detail"><div class="longsummary">Returns true/false if the editor instance is dirty or not. In other words if it has been modified or not.</div><h4>Returns</h4><div class="longsummary return">Editor instance dirty state.</div></div><hr><h4><a name="isHidden">isHidden</a></h4><div class="layout">boolean isHidden()
		</div><div class="detail"><div class="longsummary">Returns if the instance is hidden or not. This is a Gecko specific function other browsers will always return false. This function is used to workaround the lost designMode bug in Gecko browsers.</div><h4>Returns</h4><div class="longsummary return">Returns if the instance is hidden or not.</div></div><hr><h4><a name="queryCommandState">queryCommandState</a></h4><div class="layout">boolean queryCommandState(&lt;string&gt;	c)
		</div><div class="detail"><div class="longsummary">Returns a command specific state, for example if bold is enabled or not.</div><div class="params"><h4>Parameters</h4><div class="param">c - Command to query state from.</div></div><h4>Returns</h4><div class="longsummary return">Command specific state, for example if bold is enabled or not.</div></div><hr><h4><a name="queryCommandValue">queryCommandValue</a></h4><div class="layout">mixed queryCommandValue(&lt;string&gt;	c)
		</div><div class="detail"><div class="longsummary">Returns a command specific value, for example the current font size.</div><div class="params"><h4>Parameters</h4><div class="param">c - Command to query value from.</div></div><h4>Returns</h4><div class="longsummary return">Command specific value, for example the current font size.</div></div><hr><h4><a name="repaint">repaint</a></h4><div class="layout">void repaint()
		</div><div class="detail"><div class="longsummary">Repaints the editarea in Gecko browsers. This method removes ghost resize handlers and other trailing graphics.</div></div><hr><h4><a name="resizeToContent">resizeToContent</a></h4><div class="layout">void resizeToContent()
		</div><div class="detail"><div class="longsummary">Auto resizes the current editor instance to match the inner document size.</div></div><hr><h4><a name="select">select</a></h4><div class="layout">void select()
		</div><div class="detail"><div class="longsummary">Selects this instance as the currently selected instance. This will also dispatch a selectInstance call to all themes, plugins and other listeners.</div></div><hr><h4><a name="setBaseHREF">setBaseHREF</a></h4><div class="layout">void setBaseHREF(&lt;string&gt;	u)
		</div><div class="detail"><div class="longsummary">Sets the base href url of the current document instance. This method is used to temporarly remove the base url during copy/paste and drag/drop operations of relative links from external sites into TinyMCE. MSIE has a bug and converts relative links from external sites to absolute links incorrectly.</div><div class="params"><h4>Parameters</h4><div class="param">u - URL to set as base URL or null to remove it.</div></div></div><hr><h4><a name="setHTML">setHTML</a></h4><div class="layout">void setHTML(&lt;string&gt;	h)
		</div><div class="detail"><div class="longsummary">Sets the HTML contents of the instance.</div><div class="params"><h4>Parameters</h4><div class="param">h - HTML content string to replace body with.</div></div></div><hr><h4><a name="switchSettings">switchSettings</a></h4><div class="layout">void switchSettings()
		</div><div class="detail"><div class="longsummary">Switches the global TinyMCE settings to the current instance settings. This method is used to handle multiple configurations.</div></div><hr><h4><a name="triggerSave">triggerSave</a></h4><div class="layout">void triggerSave(&lt;boolean&gt;	skip_cleanup, &lt;boolean&gt;	skip_callback)
		</div><div class="detail"><div class="longsummary">Moves the contents from the TinyMCE editor control instance to the hidden textarea that got replaced with TinyMCE. This is executed automaticly on for example form submit unless you configure otherwice.</div><div class="params"><h4>Parameters</h4><div class="param">skip_cleanup - Optional Skip cleanup, simply move the contents as fast as possible.</div><div class="param">skip_callback - Optional Skip callback, don't call the save_callback function.</div></div></div></div></div></div></div><br style="clear: both"><div class="footer">JavaScript API documentation was generated with <a href="http://www.moxiecode.com">moxiedoc</a></div></body></html>